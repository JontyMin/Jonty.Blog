@page "/admin/categories"
@using Jonty.Blog.BlazorApp.Response.Blog.Params

<AdminLayout>
	@if (categories == null)
	{
		<Loading />
	}
	else
	{
		<div class="post-wrap categories">
			<h2 class="post-title">-&nbsp;Categories&nbsp;-</h2>
			@if (categories.Success && categories.Result.Any())
			{
				<div class="categories-card">
					@foreach (var item in categories.Result)
					{
						<div class="card-item">
							<div class="categories">
								<NavLink title="❌删除" @onclick="@(async () => await DeleteAsync(item.Id))">❌</NavLink>
								<NavLink title="📝编辑" @onclick="@(() => ShowBox(item))">📝</NavLink>
								<NavLink target="_blank" href="@($"/category/{item.DisplayName}")">
									<h3>@item.CategoryName</h3>
									<small>(@item.Count)</small>
								</NavLink>
							</div>
						</div>
					}
					<div class="card-item">
						<div class="categories">
							<NavLink><h3 @onclick="@(() => ShowBox())">📕~~~ 新增分类 ~~~📕</h3></NavLink>
						</div>
					</div>
				</div>
			}
			else
			{
				<ErrorTip />
			}
		</div>

		<Box OnClickCallback="@SubmitAsync" Open="@Open">
			<div class="box-item">
				<b>DisplayName：</b><input type="text" @bind="@displayName" @bind:event="oninput" />
			</div>
			<div class="box-item">
				<b>CategoryName：</b><input type="text" @bind="@categoryName" @bind:event="oninput" />
			</div>
		</Box>
	}
</AdminLayout>

@code {
	/// <summary>
	/// 默认隐藏Box
	/// </summary>
	private bool Open { get; set; } = false;

	/// <summary>
	/// 新增或者更新时候的分类字段值
	/// </summary>
	private string categoryName, displayName;

	/// <summary>
	/// 更新分类的Id值
	/// </summary>
	private int id;

	/// <summary>
	/// API返回的分类列表数据
	/// </summary>
	private ServiceResult<IEnumerable<QueryCategoryForAdminDto>> categories;

	/// <summary>
	/// 初始化
	/// </summary>
	/// <returns></returns>
	protected override async Task OnInitializedAsync()
	{
		var token = await Common.GetStorageAsync("token");
		Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");

		categories = await FetchData();
	}

	/// <summary>
	/// 获取数据
	/// </summary>
	/// <returns></returns>
	private async Task<ServiceResult<IEnumerable<QueryCategoryForAdminDto>>> FetchData()
	{
		return await Http.GetFromJsonAsync<ServiceResult<IEnumerable<QueryCategoryForAdminDto>>>("/blog/admin/categories");
	}

	/// <summary>
	/// 删除分类
	/// </summary>
	/// <param name="id"></param>
	/// <returns></returns>
	private async Task DeleteAsync(int id)
	{
		Open = false;

		// 弹窗确认
		bool confirmed = await Common.InvokeAsync<bool>("confirm", "\n💥💢真的要干掉这个该死的分类吗💢💥");

		if (confirmed)
		{
			var response = await Http.DeleteAsync($"/blog/category?id={id}");

			var result = await response.Content.ReadFromJsonAsync<ServiceResult>();

			if (result.Success)
			{
				categories = await FetchData();
			}
		}
	}

	/// <summary>
	/// 显示box，绑定字段
	/// </summary>
	/// <param name="dto"></param>
	private void ShowBox(QueryCategoryForAdminDto dto = null)
	{
		Open = true;
		id = 0;

		// 新增
		if (dto == null)
		{
			displayName = null;
			categoryName = null;
		}
		else // 更新
		{
			id = dto.Id;
			displayName = dto.DisplayName;
			categoryName = dto.CategoryName;
		}
	}

	/// <summary>
	/// 确认按钮点击事件
	/// </summary>
	/// <returns></returns>
	private async Task SubmitAsync()
	{
		var input = new EditCategoryInput()
		{
			DisplayName = displayName.Trim(),
			CategoryName = categoryName.Trim()
		};

		if (string.IsNullOrEmpty(input.DisplayName) || string.IsNullOrEmpty(input.CategoryName))
		{
			return;
		}

		var responseMessage = new HttpResponseMessage();

		if (id > 0)
			responseMessage = await Http.PutAsJsonAsync($"/blog/category?id={id}", input);
		else
			responseMessage = await Http.PostAsJsonAsync("/blog/category", input);

		var result = await responseMessage.Content.ReadFromJsonAsync<ServiceResult>();
		if (result.Success)
		{
			categories = await FetchData();
			Open = false;
		}
	}
}
